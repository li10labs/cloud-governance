stages:
- deploy-infra
- docker

.common:
  before_script:
    - echo "common script"
    - yum install -y python pip
    - python --version
    - pip --version
    - yum install -y aws-cli
    - aws --version
    - yum install -y nodejs
    - node --version
    - npm install -g aws-cdk
    - cdk --version

    - eval aws configure set aws_access_key_id \$${MyEnv}_AWS_ACCESS_KEY_ID
    - eval aws configure set aws_secret_access_key \$${MyEnv}_AWS_SECRET_ACCESS_KEY
    - aws sts get-caller-identity

    # - aws codeartifact login --tool npm --domain greenify --domain-owner $ACCOUNT_ID --repository npmjs --region $AWS_DEFAULT_REGION

deploy-infra:
  stage: deploy-infra
  image: amazonlinux:2023
  extends: .common
  variables:
    MyEnv: dev
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      #when: manual
      allow_failure: true
    #   changes:
    #     - template.yaml
    #     - .gitlab.yml
  script:
    - cd infra/cloudcustodian
    - echo sha= ${CI_COMMIT_SHA}
    - echo url= ${CI_PROJECT_ROOT_NAMESPACE} ${CI_PROJECT_NAME}
    - echo id=  ${CI_JOB_ID}

    - python -m pip install -r requirements.txt
    - python transform.py > lambda-code/config.json
    - pip install c7n==0.9.35 -t ./tmp/lambda-code/ --no-deps --no-compile
    - cp -r ./tmp/lambda-code/c7n ./lambda-code/c7n/

    - pip install -r ./lambda-mailer-code/requirements-mailer.txt -t ./lambda-mailer-code/  --no-deps --no-compile
    - mv ./lambda-mailer-code/main-modified.py ./lambda-mailer-code/main.py
    - mv ./lambda-mailer-code/handle-modified.py ./lambda-mailer-code/c7n_mailer/handle.py
    - mv ./lambda-mailer-code/slack_delivery-modified.py ./lambda-mailer-code/c7n_mailer/slack_delivery.py
    - mv ./lambda-mailer-code/sqs_queue_processor-modified.py ./lambda-mailer-code/c7n_mailer/sqs_queue_processor.py
    - mv ./lambda-mailer-code/target-modified.py ./lambda-mailer-code/c7n_mailer/target.py
    - mv ./lambda-mailer-code/email_delivery-modified.py ./lambda-mailer-code/c7n_mailer/email_delivery.py
    - mv ./lambda-mailer-code/mongodb_delivery.py ./lambda-mailer-code/c7n_mailer/mongodb_delivery.py
    - mv ../../policies/templates/*.j2 ./lambda-mailer-code/c7n_mailer/msg-templates/

    - export SHA=${CI_COMMIT_SHA}
    - export GIT=${CI_PROJECT_ROOT_NAMESPACE}/${CI_PROJECT_NAME}
    - export JOB=${CI_JOB_ID}

    - cdk deploy --require-approval=never --all

docker:
  stage: docker
  image: docker
  services:
    - docker:dind
  # extends: .common
  variables:
    MyEnv: dev
    REGISTRY: 123456789123.dkr.ecr.us-east-1.amazonaws.com
    REPOSITORY: governance
    IMAGE_TAG: latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      #when: manual
      allow_failure: true
    #   changes:
    #     - template.yaml
    #     - .gitlab.yml
  script:
    # - yum install -y docker
    # - systemctl start docker
    - apk add --no-cache aws-cli
    - eval aws configure set aws_access_key_id \$${MyEnv}_AWS_ACCESS_KEY_ID
    - eval aws configure set aws_secret_access_key \$${MyEnv}_AWS_SECRET_ACCESS_KEY
    - aws sts get-caller-identity
    - docker --help
    - whoami
    # - apt-get update && apt-get install -y aws-cli
    - aws --version
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 123456789123.dkr.ecr.us-east-1.amazonaws.com
    - docker build --platform=linux/amd64 -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f infra/cloudcustodian/docker/Dockerfile .
    - docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
